{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { Ionicons, Fontisto } from '@expo/vector-icons';\nimport { theme } from \"./colors\";\nvar STORAGE_KEY = \"@toDos\";\nvar STORAGE_MODE = \"@mode\";\nexport default function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      working = _useState4[0],\n      setWorking = _useState4[1];\n\n  var travel = function travel() {\n    return _regeneratorRuntime.async(function travel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setWorking(false);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(setModeInStorage(\"travel\"));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var work = function work() {\n    return _regeneratorRuntime.async(function work$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setWorking(true);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(setModeInStorage(\"work\"));\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setModeInStorage = function setModeInStorage(mode) {\n    return _regeneratorRuntime.async(function setModeInStorage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_MODE, mode));\n\n          case 3:\n            _context3.next = 8;\n            break;\n\n          case 5:\n            _context3.prev = 5;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(_context3.t0);\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var getModeInStorage = function getModeInStorage() {\n    var mode;\n    return _regeneratorRuntime.async(function getModeInStorage$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_MODE));\n\n          case 2:\n            mode = _context4.sent;\n            return _context4.abrupt(\"return\", mode != null ? setWorking(mode === \"working\") : null);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      text = _useState6[0],\n      setText = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      toDos = _useState8[0],\n      setToDos = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      editText = _useState10[0],\n      setEditText = _useState10[1];\n\n  var onChangeText = function onChangeText(payload) {\n    return setText(payload);\n  };\n\n  var onChangeEditText = function onChangeEditText(editText) {\n    return setEditText(editText);\n  };\n\n  var addTodo = function addTodo() {\n    var newTodos;\n    return _regeneratorRuntime.async(function addTodo$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!(text === \"\")) {\n              _context5.next = 2;\n              break;\n            }\n\n            return _context5.abrupt(\"return\");\n\n          case 2:\n            newTodos = _objectSpread(_objectSpread({}, toDos), {}, _defineProperty({}, Date.now(), {\n              text: text,\n              working: working,\n              \"done\": false,\n              \"edit\": false\n            }));\n            _context5.next = 5;\n            return _regeneratorRuntime.awrap(setAndSave(newTodos));\n\n          case 5:\n            setText(\"\");\n\n          case 6:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var saveToDos = function saveToDos(toSave) {\n    return _regeneratorRuntime.async(function saveToDos$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _context6.prev = 0;\n            _context6.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave)));\n\n          case 3:\n            _context6.next = 8;\n            break;\n\n          case 5:\n            _context6.prev = 5;\n            _context6.t0 = _context6[\"catch\"](0);\n            console.log(_context6.t0);\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var loadToDos = function loadToDos() {\n    var jsonString;\n    return _regeneratorRuntime.async(function loadToDos$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            _context7.prev = 0;\n            _context7.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));\n\n          case 3:\n            jsonString = _context7.sent;\n            return _context7.abrupt(\"return\", jsonString != null ? setToDos(JSON.parse(jsonString)) : null);\n\n          case 7:\n            _context7.prev = 7;\n            _context7.t0 = _context7[\"catch\"](0);\n            console.log(_context7.t0);\n\n          case 10:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  var deleteTodo = function deleteTodo(key) {\n    Alert.alert(\"Delete To Do\", \"Are you sure?\", [{\n      text: \"Cancel\"\n    }, {\n      text: \"Delete\",\n      style: \"destructive\",\n      onPress: function onPress() {\n        var newToDos;\n        return _regeneratorRuntime.async(function onPress$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                newToDos = _objectSpread({}, toDos);\n                delete newToDos[key];\n                _context8.next = 4;\n                return _regeneratorRuntime.awrap(setAndSave(newToDos));\n\n              case 4:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      }\n    }]);\n  };\n\n  var doneTodo = function doneTodo(key, doneStatus) {\n    var newTodos;\n    return _regeneratorRuntime.async(function doneTodo$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            newTodos = _objectSpread({}, toDos);\n            newTodos[key].done = !doneStatus;\n            _context9.next = 4;\n            return _regeneratorRuntime.awrap(setAndSave(newTodos));\n\n          case 4:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var editStartToDo = function editStartToDo(key) {\n    var newTodos;\n    return _regeneratorRuntime.async(function editStartToDo$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            newTodos = _objectSpread({}, toDos);\n            newTodos[key].edit = !newTodos[key].edit;\n            setEditText(newTodos[key].text);\n            _context10.next = 5;\n            return _regeneratorRuntime.awrap(setAndSave(newTodos));\n\n          case 5:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var editToDo = function editToDo(key) {\n    var newTodos;\n    return _regeneratorRuntime.async(function editToDo$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            newTodos = _objectSpread({}, toDos);\n            newTodos[key].text = editText;\n            newTodos[key].edit = false;\n            _context11.next = 5;\n            return _regeneratorRuntime.awrap(setAndSave(newTodos));\n\n          case 5:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setAndSave = function setAndSave(newTodos) {\n    return _regeneratorRuntime.async(function setAndSave$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            setToDos(newTodos);\n            _context12.next = 3;\n            return _regeneratorRuntime.awrap(saveToDos(newTodos));\n\n          case 3:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _context13.next = 2;\n            return _regeneratorRuntime.awrap(getModeInStorage());\n\n          case 2:\n            _context13.next = 4;\n            return _regeneratorRuntime.awrap(loadToDos());\n\n          case 4:\n            setLoading(false);\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(View, {\n    style: styles.header\n  }, React.createElement(TouchableOpacity, {\n    onPress: work\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.btnText), {}, {\n      color: working ? theme.white : theme.gray\n    })\n  }, \"Work\")), React.createElement(TouchableOpacity, {\n    onPress: travel\n  }, React.createElement(Text, {\n    style: _objectSpread(_objectSpread({}, styles.btnText), {}, {\n      color: !working ? theme.white : theme.gray\n    })\n  }, \"Travel\"))), React.createElement(View, null, React.createElement(TextInput, {\n    onSubmitEditing: addTodo,\n    onChangeText: onChangeText,\n    returnKeyType: \"done\",\n    style: styles.input,\n    value: text,\n    placeholder: working ? \"Add a To Do\" : \"Where do you wanna go?\"\n  }), React.createElement(ScrollView, null, Object.keys(toDos).map(function (key) {\n    return toDos[key].working === working ? React.createElement(View, {\n      style: styles.toDo,\n      key: key\n    }, toDos[key].done === true ? React.createElement(Text, {\n      style: styles.toDoDoneText\n    }, toDos[key].text) : toDos[key].edit === true ? React.createElement(TextInput, {\n      style: styles.input,\n      placeholder: toDos[key].text,\n      value: editText,\n      onChangeText: onChangeEditText,\n      returnKeyType: \"done\",\n      onSubmitEditing: function onSubmitEditing() {\n        return editToDo(key);\n      }\n    }) : React.createElement(Text, {\n      style: styles.toDoText\n    }, toDos[key].text), React.createElement(View, {\n      style: styles.iconBox\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return doneTodo(key, toDos[key].done);\n      }\n    }, React.createElement(Ionicons, {\n      style: styles.touch,\n      name: \"ios-cloud-done\",\n      size: 24,\n      color: theme.gray\n    })), toDos[key].done === true ? null : React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return editStartToDo(key);\n      }\n    }, React.createElement(Ionicons, {\n      style: styles.touch,\n      name: \"pencil\",\n      size: 24,\n      color: theme.gray\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return deleteTodo(key);\n      }\n    }, React.createElement(Fontisto, {\n      style: styles.touch,\n      name: \"trash\",\n      size: 24,\n      color: theme.gray\n    })))) : null;\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20\n  },\n  header: {\n    justifyContent: \"space-between\",\n    flexDirection: \"row\",\n    marginTop: 100\n  },\n  btnText: {\n    color: theme.white,\n    fontSize: 38,\n    fontWeight: \"600\"\n  },\n  input: {\n    backgroundColor: theme.white,\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    borderRadius: 15,\n    marginVertical: 20,\n    fontSize: 18\n  },\n  toDo: {\n    width: \"100%\",\n    backgroundColor: theme.toDoBg,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  iconBox: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  touch: {\n    marginHorizontal: 5\n  },\n  toDoText: {\n    color: theme.white,\n    fontSize: 16,\n    fontWeight: \"500\"\n  },\n  toDoDoneText: {\n    color: theme.doneText,\n    fontSize: 16,\n    fontWeight: \"500\",\n    textDecorationLine: \"line-through\"\n  },\n  emptyBox: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"row\"\n  }\n});","map":{"version":3,"sources":["/Users/johyewon/rn/ReactJs/ReactNative/WorkHardTravelHard/App.js"],"names":["StatusBar","React","useEffect","useState","AsyncStorage","Ionicons","Fontisto","theme","STORAGE_KEY","STORAGE_MODE","App","loading","setLoading","working","setWorking","travel","setModeInStorage","work","mode","setItem","console","log","getModeInStorage","getItem","text","setText","toDos","setToDos","editText","setEditText","onChangeText","payload","onChangeEditText","addTodo","newTodos","Date","now","setAndSave","saveToDos","toSave","JSON","stringify","loadToDos","jsonString","parse","deleteTodo","key","Alert","alert","style","onPress","newToDos","doneTodo","doneStatus","done","editStartToDo","edit","editToDo","styles","container","header","btnText","color","white","gray","input","Object","keys","map","toDo","toDoDoneText","toDoText","iconBox","touch","StyleSheet","create","flex","backgroundColor","bg","paddingHorizontal","justifyContent","flexDirection","marginTop","fontSize","fontWeight","paddingVertical","borderRadius","marginVertical","width","toDoBg","marginBottom","alignItems","marginHorizontal","doneText","textDecorationLine","emptyBox"],"mappings":";;;;;;;;AAAA,SAAQA,SAAR,QAAwB,iBAAxB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;;;;;;;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAAQC,QAAR,EAAkBC,QAAlB,QAAiC,oBAAjC;AACA,SAAQC,KAAR;AAEA,IAAMC,WAAW,GAAG,QAApB;AACA,IAAMC,YAAY,GAAG,OAArB;AAEA,eAAe,SAASC,GAAT,GAAe;AAC1B,kBAA8BP,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA8BT,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOU,OAAP;AAAA,MAAgBC,UAAhB;;AACA,MAAMC,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AACXD,YAAAA,UAAU,CAAC,KAAD,CAAV;AADW;AAAA,6CAELE,gBAAgB,CAAC,QAAD,CAFX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA;AAAA;AAAA;AAAA;AACTH,YAAAA,UAAU,CAAC,IAAD,CAAV;AADS;AAAA,6CAEHE,gBAAgB,CAAC,MAAD,CAFb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAMA,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAOE,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEXd,YAAY,CAACe,OAAb,CAAqBV,YAArB,EAAmCS,IAAnC,CAFW;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIjBE,YAAAA,OAAO,CAACC,GAAR;;AAJiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AASA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACFlB,YAAY,CAACmB,OAAb,CAAqBd,YAArB,CADE;;AAAA;AACfS,YAAAA,IADe;AAAA,8CAEdA,IAAI,IAAI,IAAR,GAAeJ,UAAU,CAACI,IAAI,KAAK,SAAV,CAAzB,GAAgD,IAFlC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAKA,mBAAwBf,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOqB,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA0BtB,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOuB,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCxB,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOyB,QAAP;AAAA,MAAiBC,WAAjB;;AACA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD;AAAA,WAAaN,OAAO,CAACM,OAAD,CAApB;AAAA,GAArB;;AACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,QAAD;AAAA,WAAcC,WAAW,CAACD,QAAD,CAAzB;AAAA,GAAzB;;AAEA,MAAMK,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACRT,IAAI,KAAK,EADD;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAONU,YAAAA,QAPM,mCAOSR,KAPT,2BAOiBS,IAAI,CAACC,GAAL,EAPjB,EAO8B;AAACZ,cAAAA,IAAI,EAAJA,IAAD;AAAOX,cAAAA,OAAO,EAAPA,OAAP;AAAgB,sBAAQ,KAAxB;AAA+B,sBAAQ;AAAvC,aAP9B;AAAA;AAAA,6CASNwB,UAAU,CAACH,QAAD,CATJ;;AAAA;AAUZT,YAAAA,OAAO,CAAC,EAAD,CAAP;;AAVY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAcA,MAAMa,SAAS,GAAG,SAAZA,SAAY,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEJnC,YAAY,CAACe,OAAb,CAAqBX,WAArB,EAAkCgC,IAAI,CAACC,SAAL,CAAeF,MAAf,CAAlC,CAFI;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAIVnB,YAAAA,OAAO,CAACC,GAAR;;AAJU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AASA,MAAMqB,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEetC,YAAY,CAACmB,OAAb,CAAqBf,WAArB,CAFf;;AAAA;AAEJmC,YAAAA,UAFI;AAAA,8CAGHA,UAAU,IAAI,IAAd,GAAqBhB,QAAQ,CAACa,IAAI,CAACI,KAAL,CAAWD,UAAX,CAAD,CAA7B,GAAwD,IAHrD;;AAAA;AAAA;AAAA;AAKVvB,YAAAA,OAAO,CAACC,GAAR;;AALU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAUA,MAAMwB,UAAU,GAAG,SAAbA,UAAa,CAACC,GAAD,EAAS;AACxBC,IAAAA,KAAK,CAACC,KAAN,CACI,cADJ,EAEI,eAFJ,EAGI,CACI;AACIxB,MAAAA,IAAI,EAAE;AADV,KADJ,EAII;AACIA,MAAAA,IAAI,EAAE,QADV;AAEIyB,MAAAA,KAAK,EAAE,aAFX;AAGIC,MAAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,gBAAAA,QADD,qBACgBzB,KADhB;AAEL,uBAAOyB,QAAQ,CAACL,GAAD,CAAf;AAFK;AAAA,iDAICT,UAAU,CAACc,QAAD,CAJX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHb,KAJJ,CAHJ;AAkBH,GAnBD;;AAsBA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAON,GAAP,EAAYO,UAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACPnB,YAAAA,QADO,qBACQR,KADR;AAEbQ,YAAAA,QAAQ,CAACY,GAAD,CAAR,CAAcQ,IAAd,GAAqB,CAACD,UAAtB;AAFa;AAAA,6CAIPhB,UAAU,CAACH,QAAD,CAJH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQA,MAAMqB,aAAa,GAAG,SAAhBA,aAAgB,CAAOT,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZZ,YAAAA,QADY,qBACGR,KADH;AAElBQ,YAAAA,QAAQ,CAACY,GAAD,CAAR,CAAcU,IAAd,GAAqB,CAACtB,QAAQ,CAACY,GAAD,CAAR,CAAcU,IAApC;AAEA3B,YAAAA,WAAW,CAACK,QAAQ,CAACY,GAAD,CAAR,CAActB,IAAf,CAAX;AAJkB;AAAA,6CAMZa,UAAU,CAACH,QAAD,CANE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAUA,MAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAAOX,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACPZ,YAAAA,QADO,qBACQR,KADR;AAEbQ,YAAAA,QAAQ,CAACY,GAAD,CAAR,CAActB,IAAd,GAAqBI,QAArB;AACAM,YAAAA,QAAQ,CAACY,GAAD,CAAR,CAAcU,IAAd,GAAqB,KAArB;AAHa;AAAA,6CAKPnB,UAAU,CAACH,QAAD,CALH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAQA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAAOH,QAAP;AAAA;AAAA;AAAA;AAAA;AACfP,YAAAA,QAAQ,CAACO,QAAD,CAAR;AADe;AAAA,6CAETI,SAAS,CAACJ,QAAD,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAKAhC,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACAoB,gBAAgB,EADhB;;AAAA;AAAA;AAAA,6CAEAoB,SAAS,EAFT;;AAAA;AAGN9B,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAIN,EAJM,CAAT;AAMA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE8C,MAAM,CAACC;AAApB,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACI,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE3C;AAA3B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAMyC,MAAM,CAACG,OAAb;AAAsBC,MAAAA,KAAK,EAAEjD,OAAO,GAAGN,KAAK,CAACwD,KAAT,GAAiBxD,KAAK,CAACyD;AAA3D;AAAX,YADJ,CADJ,EAII,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEjD;AAA3B,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAM2C,MAAM,CAACG,OAAb;AAAsBC,MAAAA,KAAK,EAAE,CAACjD,OAAD,GAAWN,KAAK,CAACwD,KAAjB,GAAyBxD,KAAK,CAACyD;AAA5D;AAAX,cADJ,CAJJ,CAFJ,EAUI,oBAAC,IAAD,QACI,oBAAC,SAAD;AACI,IAAA,eAAe,EAAE/B,OADrB;AAEI,IAAA,YAAY,EAAEH,YAFlB;AAGI,IAAA,aAAa,EAAC,MAHlB;AAII,IAAA,KAAK,EAAE4B,MAAM,CAACO,KAJlB;AAKI,IAAA,KAAK,EAAEzC,IALX;AAMI,IAAA,WAAW,EAAEX,OAAO,GAAG,aAAH,GAAmB;AAN3C,IADJ,EASQ,oBAAC,UAAD,QAEQqD,MAAM,CAACC,IAAP,CAAYzC,KAAZ,EAAmB0C,GAAnB,CAAuB,UAAAtB,GAAG;AAAA,WAElBpB,KAAK,CAACoB,GAAD,CAAL,CAAWjC,OAAX,KAAuBA,OAAvB,GACK,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE6C,MAAM,CAACW,IAApB;AAA0B,MAAA,GAAG,EAAEvB;AAA/B,OAEOpB,KAAK,CAACoB,GAAD,CAAL,CAAWQ,IAAX,KAAoB,IAApB,GACK,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEI,MAAM,CAACY;AAApB,OAAmC5C,KAAK,CAACoB,GAAD,CAAL,CAAWtB,IAA9C,CADL,GAISE,KAAK,CAACoB,GAAD,CAAL,CAAWU,IAAX,KAAoB,IAArB,GACI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEE,MAAM,CAACO,KADlB;AAEI,MAAA,WAAW,EAAEvC,KAAK,CAACoB,GAAD,CAAL,CAAWtB,IAF5B;AAGI,MAAA,KAAK,EAAEI,QAHX;AAII,MAAA,YAAY,EAAEI,gBAJlB;AAKI,MAAA,aAAa,EAAC,MALlB;AAMI,MAAA,eAAe,EAAE;AAAA,eAAMyB,QAAQ,CAACX,GAAD,CAAd;AAAA;AANrB,MADJ,GASI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEY,MAAM,CAACa;AAApB,OAA+B7C,KAAK,CAACoB,GAAD,CAAL,CAAWtB,IAA1C,CAfnB,EAkBG,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEkC,MAAM,CAACc;AAApB,OACI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMpB,QAAQ,CAACN,GAAD,EAAMpB,KAAK,CAACoB,GAAD,CAAL,CAAWQ,IAAjB,CAAd;AAAA;AAA3B,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEI,MAAM,CAACe,KAAxB;AAA+B,MAAA,IAAI,EAAC,gBAApC;AAAqD,MAAA,IAAI,EAAE,EAA3D;AACU,MAAA,KAAK,EAAElE,KAAK,CAACyD;AADvB,MADJ,CADJ,EAMQtC,KAAK,CAACoB,GAAD,CAAL,CAAWQ,IAAX,KAAoB,IAApB,GACI,IADJ,GAGI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMC,aAAa,CAACT,GAAD,CAAnB;AAAA;AAA3B,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEY,MAAM,CAACe,KAAxB;AAA+B,MAAA,IAAI,EAAC,QAApC;AAA6C,MAAA,IAAI,EAAE,EAAnD;AACU,MAAA,KAAK,EAAElE,KAAK,CAACyD;AADvB,MADJ,CATZ,EAcI,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMnB,UAAU,CAACC,GAAD,CAAhB;AAAA;AAA3B,OACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEY,MAAM,CAACe,KAAxB;AAA+B,MAAA,IAAI,EAAC,OAApC;AAA4C,MAAA,IAAI,EAAE,EAAlD;AACU,MAAA,KAAK,EAAElE,KAAK,CAACyD;AADvB,MADJ,CAdJ,CAlBH,CADL,GAwCI,IA1Cc;AAAA,GAA1B,CAFR,CATR,CAVJ,CADJ;AAyEH;AAED,IAAMN,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAEtE,KAAK,CAACuE,EAFhB;AAGPC,IAAAA,iBAAiB,EAAE;AAHZ,GADkB;AAM7BnB,EAAAA,MAAM,EAAE;AACJoB,IAAAA,cAAc,EAAE,eADZ;AAEJC,IAAAA,aAAa,EAAE,KAFX;AAGJC,IAAAA,SAAS,EAAE;AAHP,GANqB;AAW7BrB,EAAAA,OAAO,EAAE;AACLC,IAAAA,KAAK,EAAEvD,KAAK,CAACwD,KADR;AAELoB,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE;AAHP,GAXoB;AAgB7BnB,EAAAA,KAAK,EAAE;AACHY,IAAAA,eAAe,EAAEtE,KAAK,CAACwD,KADpB;AAEHsB,IAAAA,eAAe,EAAE,EAFd;AAGHN,IAAAA,iBAAiB,EAAE,EAHhB;AAIHO,IAAAA,YAAY,EAAE,EAJX;AAKHC,IAAAA,cAAc,EAAE,EALb;AAMHJ,IAAAA,QAAQ,EAAE;AANP,GAhBsB;AAwB7Bd,EAAAA,IAAI,EAAE;AACFmB,IAAAA,KAAK,EAAE,MADL;AAEFX,IAAAA,eAAe,EAAEtE,KAAK,CAACkF,MAFrB;AAGFC,IAAAA,YAAY,EAAE,EAHZ;AAIFL,IAAAA,eAAe,EAAE,EAJf;AAKFN,IAAAA,iBAAiB,EAAE,EALjB;AAMFO,IAAAA,YAAY,EAAE,EANZ;AAOFL,IAAAA,aAAa,EAAE,KAPb;AAQFU,IAAAA,UAAU,EAAE,QARV;AASFX,IAAAA,cAAc,EAAE;AATd,GAxBuB;AAmC7BR,EAAAA,OAAO,EAAE;AACLS,IAAAA,aAAa,EAAE,KADV;AAELU,IAAAA,UAAU,EAAE,QAFP;AAGLX,IAAAA,cAAc,EAAE;AAHX,GAnCoB;AAwC7BP,EAAAA,KAAK,EAAE;AACHmB,IAAAA,gBAAgB,EAAE;AADf,GAxCsB;AA2C7BrB,EAAAA,QAAQ,EAAE;AACNT,IAAAA,KAAK,EAAEvD,KAAK,CAACwD,KADP;AAENoB,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,UAAU,EAAE;AAHN,GA3CmB;AAgD7Bd,EAAAA,YAAY,EAAE;AACVR,IAAAA,KAAK,EAAEvD,KAAK,CAACsF,QADH;AAEVV,IAAAA,QAAQ,EAAE,EAFA;AAGVC,IAAAA,UAAU,EAAE,KAHF;AAIVU,IAAAA,kBAAkB,EAAE;AAJV,GAhDe;AAsD7BC,EAAAA,QAAQ,EAAE;AACNJ,IAAAA,UAAU,EAAE,QADN;AAENX,IAAAA,cAAc,EAAE,QAFV;AAGNC,IAAAA,aAAa,EAAE;AAHT;AAtDmB,CAAlB,CAAf","sourcesContent":["import {StatusBar} from 'expo-status-bar';\nimport React, {useEffect, useState} from 'react';\nimport {ActivityIndicator, Alert, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View} from 'react-native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {Ionicons, Fontisto} from '@expo/vector-icons';\nimport {theme} from \"./colors\";\n\nconst STORAGE_KEY = \"@toDos\";\nconst STORAGE_MODE = \"@mode\";\n\nexport default function App() {\n    const [loading, setLoading] = useState(true);\n    const [working, setWorking] = useState(true);\n    const travel = async () => {\n        setWorking(false);\n        await setModeInStorage(\"travel\");\n    };\n    const work = async () => {\n        setWorking(true);\n        await setModeInStorage(\"work\");\n    };\n\n    // 모드 저장하기\n    const setModeInStorage = async (mode) => {\n        try {\n            await AsyncStorage.setItem(STORAGE_MODE, mode);\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    // 모드 가져오기\n    const getModeInStorage = async () => {\n        const mode = await AsyncStorage.getItem(STORAGE_MODE);\n        return mode != null ? setWorking(mode === \"working\") : null;\n    }\n\n    const [text, setText] = useState(\"\");\n    const [toDos, setToDos] = useState({});\n    const [editText, setEditText] = useState(\"\");\n    const onChangeText = (payload) => setText(payload);\n    const onChangeEditText = (editText) => setEditText(editText);\n\n    const addTodo = async () => {\n        if (text === \"\")\n            return;\n\n        // save to do\n        // list 합치기\n        // const newTodos = Object.assign({}, toDos, {[Date.now()]: {text, work: working}});\n        const newTodos = {...toDos, [Date.now()]: {text, working, \"done\": false, \"edit\": false}}\n\n        await setAndSave(newTodos);\n        setText(\"\");\n    };\n\n    // 내부 저장소에 저장\n    const saveToDos = async (toSave) => {\n        try {\n            await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    // 내부 저장소에서 가져오기\n    const loadToDos = async () => {\n        try {\n            const jsonString = await AsyncStorage.getItem(STORAGE_KEY);\n            return jsonString != null ? setToDos(JSON.parse(jsonString)) : null;\n        } catch (e) {\n            console.log(e);\n        }\n    };\n\n    // 아이템 삭제\n    const deleteTodo = (key) => {\n        Alert.alert(\n            \"Delete To Do\",\n            \"Are you sure?\",\n            [\n                {\n                    text: \"Cancel\",\n                },\n                {\n                    text: \"Delete\",\n                    style: \"destructive\",\n                    onPress: async () => {\n                        const newToDos = {...toDos};\n                        delete newToDos[key]\n\n                        await setAndSave(newToDos);\n                    },\n                },\n            ]);\n    };\n\n    // 완료 표시 on / off\n    const doneTodo = async (key, doneStatus) => {\n        const newTodos = {...toDos};\n        newTodos[key].done = !doneStatus\n\n        await setAndSave(newTodos);\n    };\n\n    // 수정 시작 / 취소\n    const editStartToDo = async (key) => {\n        const newTodos = {...toDos};\n        newTodos[key].edit = !newTodos[key].edit;\n\n        setEditText(newTodos[key].text);\n\n        await setAndSave(newTodos);\n    }\n\n    // 수정 완료\n    const editToDo = async (key) => {\n        const newTodos = {...toDos};\n        newTodos[key].text = editText;\n        newTodos[key].edit = false;\n\n        await setAndSave(newTodos);\n    };\n\n    const setAndSave = async (newTodos) => {\n        setToDos(newTodos);\n        await saveToDos(newTodos);\n    };\n\n    useEffect(async () => {\n        await getModeInStorage();\n        await loadToDos();\n        setLoading(false);\n    }, []);\n\n    return (\n        <View style={styles.container}>\n            <StatusBar style=\"auto\"/>\n            <View style={styles.header}>\n                <TouchableOpacity onPress={work}>\n                    <Text style={{...styles.btnText, color: working ? theme.white : theme.gray}}>Work</Text>\n                </TouchableOpacity>\n                <TouchableOpacity onPress={travel}>\n                    <Text style={{...styles.btnText, color: !working ? theme.white : theme.gray}}>Travel</Text>\n                </TouchableOpacity>\n            </View>\n            <View>\n                <TextInput\n                    onSubmitEditing={addTodo}\n                    onChangeText={onChangeText}\n                    returnKeyType=\"done\"\n                    style={styles.input}\n                    value={text}\n                    placeholder={working ? \"Add a To Do\" : \"Where do you wanna go?\"}/>\n                {\n                    <ScrollView>\n                        {\n                            Object.keys(toDos).map(key =>\n                                (\n                                    toDos[key].working === working ?\n                                        (<View style={styles.toDo} key={key}>\n                                            {\n                                                toDos[key].done === true ?\n                                                    (<Text style={styles.toDoDoneText}>{toDos[key].text}</Text>)\n                                                    :\n                                                    (\n                                                        (toDos[key].edit === true) ?\n                                                            <TextInput\n                                                                style={styles.input}\n                                                                placeholder={toDos[key].text}\n                                                                value={editText}\n                                                                onChangeText={onChangeEditText}\n                                                                returnKeyType=\"done\"\n                                                                onSubmitEditing={() => editToDo(key)}/>\n                                                            :\n                                                            <Text style={styles.toDoText}>{toDos[key].text}</Text>\n                                                    )\n                                            }\n                                            <View style={styles.iconBox}>\n                                                <TouchableOpacity onPress={() => doneTodo(key, toDos[key].done)}>\n                                                    <Ionicons style={styles.touch} name=\"ios-cloud-done\" size={24}\n                                                              color={theme.gray}/>\n                                                </TouchableOpacity>\n                                                {\n                                                    toDos[key].done === true ?\n                                                        null\n                                                        :\n                                                        <TouchableOpacity onPress={() => editStartToDo(key)}>\n                                                            <Ionicons style={styles.touch} name=\"pencil\" size={24}\n                                                                      color={theme.gray}/>\n                                                        </TouchableOpacity>\n                                                }\n                                                <TouchableOpacity onPress={() => deleteTodo(key)}>\n                                                    <Fontisto style={styles.touch} name=\"trash\" size={24}\n                                                              color={theme.gray}/>\n                                                </TouchableOpacity>\n                                            </View>\n                                        </View>)\n                                        :\n                                        null\n                                )\n                            )\n                        }\n                    </ScrollView>\n                }\n            </View>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: theme.bg,\n        paddingHorizontal: 20,\n    },\n    header: {\n        justifyContent: \"space-between\",\n        flexDirection: \"row\",\n        marginTop: 100,\n    },\n    btnText: {\n        color: theme.white,\n        fontSize: 38,\n        fontWeight: \"600\",\n    },\n    input: {\n        backgroundColor: theme.white,\n        paddingVertical: 10,\n        paddingHorizontal: 15,\n        borderRadius: 15,\n        marginVertical: 20,\n        fontSize: 18,\n    },\n    toDo: {\n        width: \"100%\",\n        backgroundColor: theme.toDoBg,\n        marginBottom: 10,\n        paddingVertical: 20,\n        paddingHorizontal: 20,\n        borderRadius: 15,\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    iconBox: {\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n    },\n    touch: {\n        marginHorizontal: 5,\n    },\n    toDoText: {\n        color: theme.white,\n        fontSize: 16,\n        fontWeight: \"500\",\n    },\n    toDoDoneText: {\n        color: theme.doneText,\n        fontSize: 16,\n        fontWeight: \"500\",\n        textDecorationLine: \"line-through\",\n    },\n    emptyBox: {\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n    }\n});\n"]},"metadata":{},"sourceType":"module"}